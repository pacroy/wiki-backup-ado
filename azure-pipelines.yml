jobs:
- job: 'backup'
  displayName: 'Backup Wiki'
  pool:
    vmImage: 'ubuntu-18.04'
  steps:
  - checkout: none
  - task: Bash@3
    displayName: 'Check Pipeline Variables'
    inputs:
      failOnStderr: true
      targetType: 'inline'
      script: |
        if [ -z "$(AKS_RESOURCE_GROUP)" ]; then >&2 echo 'Variable "AKS_RESOURCE_GROUP" is not set'; fi
        if [ -z "$(AKS_CLUSTER_NAME)" ]; then >&2 echo 'Variable "AKS_CLUSTER_NAME" is not set'; fi
        if [ -z "$(KUBE_CONTEXT)" ]; then >&2 echo 'Variable "KUBE_CONTEXT" is not set'; fi
        if [ -z "$(WIKI_NAMSPACE)" ]; then >&2 echo 'Variable "WIKI_NAMSPACE" is not set'; fi
        if [ -z "$(MYSQL_APP_LABEL)" ]; then >&2 echo 'Variable "MYSQL_APP_LABEL" is not set'; fi
        if [ -z "$(BOOKSTACK_APP_LABEL)" ]; then >&2 echo 'Variable "BOOKSTACK_APP_LABEL" is not set'; fi
        if [ -z "$(BLOB_CONTAINER_NAME)" ]; then >&2 echo 'Variable "BLOB_CONTAINER_NAME" is not set'; fi
        if [ -z "$(STORAGE_ACCOUNT_NAME)" ]; then >&2 echo 'Variable "STORAGE_ACCOUNT_NAME" is not set'; fi
  - task: Bash@3
    displayName: 'Print Tool Version'
    inputs:
      failOnStderr: false
      targetType: 'inline'
      script: |
        command -v az
        az version
        command -v kubectl
        kubectl version --client=true
  - task: Bash@3
    displayName: 'Download Backup Script'
    inputs:
      failOnStderr: true
      targetType: 'inline'
      script: curl -s https://raw.githubusercontent.com/pacroy/bookstack-backup/master/backup.sh -o backup.sh
  - task: AzureCLI@2
    displayName: 'Get AKS Credential'
    inputs:
      azureSubscription: 'par-shared-002(99813d40-928b-44b2-a969-2c7ea5bd8b96)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      failOnStandardError: true
      useGlobalConfig: true
      inlineScript: az aks get-credentials --resource-group $(AKS_RESOURCE_GROUP) --name $(AKS_CLUSTER_NAME)
  - task: Bash@3
    displayName: 'Execute Backup Script'
    inputs:
      failOnStderr: true
      targetType: 'filePath'
      filePath: backup.sh
      arguments: '-y'
  - task: Bash@3
    displayName: 'List Backup Files'
    inputs:
      failOnStderr: true
      targetType: 'inline'
      script: ls -al backup/
  - task: Bash@3
    displayName: 'Upload Files to Blob'
    inputs:
      failOnStderr: true
      targetType: 'inline'
      script: |
        BLOB_PREFIX=$(date +%Y%m%d)
        az storage blob upload \
          --container-name '$(BLOB_CONTAINER_NAME)' \
          --file 'backup/bookstack.sql' \
          --name "$BLOB_PREFIX/bookstack.sql" \
          --account-name '$(STORAGE_ACCOUNT_NAME)' \
          --auth-mode key --only-show-errors --no-progress
        az storage blob upload \
          --container-name '$(BLOB_CONTAINER_NAME)' \
          --file 'backup/uploads.tgz' \
          --name "$BLOB_PREFIX/uploads.tgz" \
          --account-name '$(STORAGE_ACCOUNT_NAME)' \
          --auth-mode key --only-show-errors --no-progress
        az storage blob upload \
          --container-name '$(BLOB_CONTAINER_NAME)' \
          --file 'backup/storage.tgz' \
          --name "$BLOB_PREFIX/storage.tgz" \
          --account-name '$(STORAGE_ACCOUNT_NAME)' \
          --auth-mode key --only-show-errors --no-progress